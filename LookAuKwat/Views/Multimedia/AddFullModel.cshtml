@model LookAuKwat.ViewModel.MultimediaViewModel
@using LookAuKwat.ViewModel

@{
    ViewBag.Title = "Déposer une annonce catégorie Multimédia et validation";
}

    <h2>Déposer une annonce catégorie Multimédia et validation</h2>

@using (Html.BeginForm("AddMultimedia", "Multimedia", new
{
    TypeMultimedia = Model.TypeMultimedia,
    SearchOrAskJobMultimedia = Model.SearchOrAskJobMultimedia,
    BrandConsoleGame = Model.BrandConsoleGame,
    BrandInformatiquePhotocopi = Model.BrandInformatiquePhotocopi,
    BrandPhoneAccesories = Model.BrandPhoneAccesories,
    BrandSon = Model.BrandSon,
    BrandTv = Model.BrandTv,
    BrandOtherMultimedia = Model.BrandOtherMultimedia,
    ModelAlcatelPhoneAccesorie = Model.ModelAlcatelPhoneAccesorie,
    ModelApplePhoneAccesorie = Model.ModelApplePhoneAccesorie,
    ModelAzusPhoneAccesorie = Model.ModelAzusPhoneAccesorie,
    ModelConsoleGame = Model.ModelConsoleGame,
    ModelHonorPhoneAccesorie = Model.ModelHonorPhoneAccesorie,
    ModelHTCPhoneAccesorie = Model.ModelHTCPhoneAccesorie,
    ModelHuaweiPhoneAccesorie = Model.ModelHuaweiPhoneAccesorie,
    ModelInformatiquePhotocopy = Model.ModelInformatiquePhotocopy,
    ModelLenovoPhoneAccesorie = Model.ModelLenovoPhoneAccesorie,
    ModelLGPhoneAccesorie = Model.ModelLGPhoneAccesorie,
    ModelMicrosoftPhoneAccesorie = Model.ModelMicrosoftPhoneAccesorie,
    ModelMotorolaPhoneAccesorie = Model.ModelMotorolaPhoneAccesorie,
    ModelOnePlusPhoneAccesorie = Model.ModelOnePlusPhoneAccesorie,
    ModelOtherMultimedia = Model.ModelOtherMultimedia,
    ModelSamsungPhoneAccesorie = Model.ModelSamsungPhoneAccesorie,
    ModelSon = Model.ModelSon,
    ModelSonyPhoneAccesorie = Model.ModelSonyPhoneAccesorie,
    ModelTV = Model.ModelTV,
    ModelWikoPhoneAccesorie = Model.ModelWikoPhoneAccesorie,
    ModelXaomiPhoneAccesorie = Model.ModelXaomiPhoneAccesorie,
    ModelZTEPhoneAccesorie = Model.ModelZTEPhoneAccesorie,
    Capacity = Model.Capacity,
    PriceMultimedia = Model.PriceMultimedia
}, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


    <div class="form-group ">
        @Html.LabelFor(model => model.TitleMultimedia, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TitleMultimedia, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TitleMultimedia, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.DescriptionMultimedia, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.DescriptionMultimedia, new { @class = "form-control", @cols = "45", @rows = "5" })
            @Html.ValidationMessageFor(model => model.DescriptionMultimedia, "", new { @class = "text-danger" })
        </div>
    </div>

    @if (User.IsInRole(MyRoleConstant.RoleAdmin) || User.IsInRole(MyRoleConstant.Role_SuperAgent))
    {
        <div class="form-group ">
            @Html.LabelFor(model => model.Provider_Id, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.DropDownListFor(model => model.Provider_Id, SelectListMethod.GetProviders(), "choisir un fournisseur", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Provider_Id, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Stock, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Stock, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Stock, "", new { @class = "text-danger" })
            </div>
        </div>
    }

    <div class="form-group ">
        @Html.LabelFor(model => model.ProductCountry, htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-8">
            @Html.DropDownListFor(model => model.ProductCountry, SelectListMethod.GetCountryList(), "choisir", new { @id = "Country", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ProductCountry, "", new { @class = "text-danger" })
        </div>
    </div>



    <div class="form-group">
        @Html.LabelFor(model => model.TownMultimedia, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.TownMultimedia, SelectListMethod.GetListTownCameroon(), "choisir", new { @id = "Town", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.TownMultimedia, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <p class=" col-md-offset-2 text-info">Veuillez choisir une adresse de la liste après votre saisie.</p>
        <div class="form-group">

            @Html.LabelFor(model => model.StreetMultimedia, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.StreetMultimedia, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StreetMultimedia, "", new { @class = "text-danger" })
            </div>

        </div>
    </div>

    <div class="form-group hidden ">
        @Html.LabelFor(model => model.Imageproduct.Image, htmlAttributes: new { @class = "control-label col-md-2" })

        @*<label class="control-label col-md-2" for="#imagesJobs"></label>*@
        <div class="col-md-6">

            <input type="file" name="ImageFile" accept="image/*" multiple="multiple" @*onchange="readURL(this);"*@>
            <p class="text-info">Vous pouvez sélectionner à la fois une ou trois(3) images au maximun.</p>
        </div>
        @*<div style="height:50px " class="col-md-4">
                <img id="InitiativeImageUpToDate" src="https://cdn.pixabay.com/photo/2016/08/08/09/17/avatar-1577909_960_720.png" alt="photo de initiative" height="50" />
            </div>*@
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button type="submit" class="btn btn-success">Suivant <span class="glyphicon glyphicon-menu-right"></span></button>
        </div>
    </div>
</div>
}
<p>Page 2 sur 2</p>
<script type="text/javascript">
    $(function () {

        $("#Country").change(function () {
            var country = $("#Country").val();
            if (country == null || country == "") {
                alert("Veillez choisir un pays s'il vous plaît");
                return;
            }
            // $("input[id='ClientName']").val(country);
            if (country != null || country != "") {
                $.ajax({
                    url: "/Product/BindTown",
                    type: "POST",
                    data: JSON.stringify({ 'country': country }),
                    dataType: "json",
                    traditional: true,
                    contentType: "application/json; charset=utf-8",
                    success: function (result) {

                        //debugger;  
                        var listItems = "";
                        // var list = "";
                        var a = result;
                        //var s = result.bindingAddresses.siteAdd;
                        for (i in result) {

                            listItems += "<option value='" + a[i].Value + "'>" + a[i].Text

                                + "</option>";
                        }
                        $("#Town").html(listItems);

                        //for (j in s) {
                        //    list += "<option value='" + s[j].Value + "'>" + s[j].Text +

                        //        "</option>";
                        //}
                        //$("#SiteId").html(list);
                    },
                    error: function () {
                        alert("An error has occured!!!");
                    }
                });
            }
        });  


         $("#StreetMultimedia").autocomplete({
        source: function (request, response) {
        $.ajax({
            type: "POST",
            url: '@Url.Action("ShowAddress", "Job")',
            dataType: "json",
            headers: {
                //"api-key": searchServiceApiKey,
                "Content-Type": "application/json"
            },
            data: JSON.stringify({
                top: 5,

               // country: $("#Country").val(),
                town: $("#TownMultimedia").val(),
                country: $("#Country").val(),
                 // zipcode: $("#ZipCode").val(),
                term: request.term
            }),
            success: function (data) {
                if (data && data.length > 0) {
                      var parsedDate = $.parseJSON(data);

                        response((parsedDate["results"]).map(feature => feature["formatted"]));

                    }
                }
            });
            },
            select: function (event, ui) {
                //remember the selected item
                $('#StreetMultimedia')
                    .data('selected-item', ui.item.label);
            },
        minLength: 3,
        position: {
            //my: "left top",
            //at: "left-23 bottom+10"
            my: "left top",
  at: "left-3 bottom+0",
            of: "#StreetMultimedia"
            },
            appendTo: "#MyModalAddMultimedia"
        }).blur(function () {
            var value = $('#StreetMultimedia').val();
            //check if the input's value matches the selected item
            if (value != $('#StreetMultimedia').data('selected-item')) {
                //they don't, the user must have typed something else
                $('#StreetMultimedia')
                    .val('') //clear the input's text
                    .data('selected-item', ''); //clear the selected item
            }
        });
    })
</script>