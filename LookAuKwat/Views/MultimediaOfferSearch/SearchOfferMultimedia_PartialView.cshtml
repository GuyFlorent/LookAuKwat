@model LookAuKwat.ViewModel.SeachJobViewModel
@using LookAuKwat.ViewModel

@using (Html.BeginForm("searchOfferMultimedia", "MultimediaOfferSearch" ))
{
    @Html.AntiForgeryToken()

    <div>
        <h4 class="text-center">Filtrer votre <strong>recherche</strong> dans la catégorie <strong>Multimedia</strong></h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="row">


       
        <div class="form-group col-xs-6 col-sm-4 col-md-4 ">
            @Html.LabelFor(model => model.TownMultimedia, htmlAttributes: new { @class = "control-label col-md-4" })
          
                @Html.DropDownListFor(model => model.TownMultimedia, SelectListMethod.GetListTownCameroon(), "Toutes les villes", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TownMultimedia, "", new { @class = "text-danger" })
           
        </div>
        <div class="form-group col-xs-6 col-sm-4 col-md-4" >
            @Html.LabelFor(model => model.TypeMultimedia, htmlAttributes: new { @class = "control-label col-md-4" })
           
                @Html.DropDownListFor(model => model.TypeMultimedia, SelectListMethod.TypeMultimedia(), "Toute les rubriques", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TypeMultimedia, "", new { @class = "text-danger" })
            
        </div>
        <div class="form-group col-xs-6 col-sm-4 col-md-4">
            @Html.LabelFor(model => model.BrandMultimedia, htmlAttributes: new { @class = "control-label col-md-4" })
           
                @Html.DropDownListFor(model => model.BrandMultimedia, SelectListMethod.BrandTotalList(), "Toutes les marques", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BrandMultimedia, "", new { @class = "text-danger" })
          
        </div>
        

        <div class="form-group col-xs-6 col-sm-4 col-md-4 " >
            @Html.LabelFor(model => model.ModelMultimedia, htmlAttributes: new { @class = "control-label col-md-4" })

            @Html.EditorFor(model => model.ModelMultimedia, new { htmlAttributes = new { @class = "form-control", placeholder="Ex s 10, TV 4k, Iphone, Imprimante..." } })
            @Html.ValidationMessageFor(model => model.ModelMultimedia, "", new { @class = "text-danger" })

        </div>
       
        <div class="form-group col-xs-6 col-sm-4 col-md-4 ">
            @Html.LabelFor(model => model.Capacity, htmlAttributes: new { @class = "control-label col-md-4" })
          
                @Html.DropDownListFor(model => model.Capacity, SelectListMethod.CapacityMultimedia(), "Toutes les capacités", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Capacity, "", new { @class = "text-danger" })
           
        </div>

        <div class="form-group col-xs-6 col-sm-4 col-md-4" >
            @Html.LabelFor(model => model.PriceMultimedia, htmlAttributes: new { @class = "control-label col-md-9" })
         
                @Html.EditorFor(model => model.PriceMultimedia, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PriceMultimedia, "", new { @class = "text-danger" })
         
        </div>

    </div>

        <button id="submitMultii" type="submit" class="btn btn-primary">
            <span class="glyphicon glyphicon-search"></span> <strong>Rechercher (<span class="badge"></span> Résultats)</strong>
        </button>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script type="text/javascript">
    $(function () {
        ResultMultimediaSpan();
        $("#TownMultimedia").change(ResultMultimediaSpan);
        $("#TypeMultimedia").change(ResultMultimediaSpan);
        $("#BrandMultimedia").change(ResultMultimediaSpan);
        $("#Capacity").change(ResultMultimediaSpan);
       

        $('#ModelMultimedia').on('input', function () {
            ResultMultimediaSpan();
        });
        $('#PriceMultimedia').on('input', function () {
            ResultMultimediaSpan();
        });
    })
    $("#ModelMultimedia").autocomplete({
        source: function (request, response) {
        $.ajax({
            type: "POST",
            url: '@Url.Action("ListModelMultimedia", "Multimedia")',
            dataType: "json",
            headers: {
                //"api-key": searchServiceApiKey,
                "Content-Type": "application/json"
            },
            data: JSON.stringify({
                top: 5,

               // country: $("#Country").val(),
               // town: $("#TownAppart").val(),
                 // zipcode: $("#ZipCode").val(),
                term: request.term
            }),
            success: function (data) {
                console.log(data);
                        response(data);

                }
            });
            },
            select: function (event, ui) {
                //remember the selected item
                $('#ModelMultimedia')
                    .data('selected-item', ui.item.label);
            }
           // appendTo: "#MyModalAddApartment"
        }).blur(function () {
            var value = $('#ModelMultimedia').val();
            //check if the input's value matches the selected item
            if (value != $('#ModelMultimedia').data('selected-item')) {
                //they don't, the user must have typed something else
                $('#ModelMultimedia')
                    .val('') //clear the input's text
                    .data('selected-item', ''); //clear the selected item
            }
        });

    function ResultMultimediaSpan() {

        $.ajax({
            type: "POST",
            url: '@Url.Action("ResultSearchOfferMultimediaSpan_Jason", "MultimediaOfferSearch")',
            dataType: "json",
            headers: {
                //"api-key": searchServiceApiKey,
                "Content-Type": "application/json"
            },
            data: JSON.stringify({

                type: $("#TypeMultimedia").val(),
                town: $("#TownMultimedia").val(),
                brand: $("#BrandMultimedia").val(),
                modele: $("#ModelMultimedia").val(),
                capacity: $("#Capacity").val(),
                maxPrice: $("#PriceMultimedia").val(),
            }),
            success: function (data) {

                var $badge = $("#submitMultii").find('.badge')
                    //number = Object.keys(data).length;
                $badge.text(data);

            }
            //,
            //error: function (xhr) {
            //    console.log(xhr.responseText);
            //    alert("Une erreur est survenu  !");
            //}
        })
    }
</script>