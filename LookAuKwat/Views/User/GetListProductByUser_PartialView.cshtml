@model IEnumerable<LookAuKwat.Models.ProductModel>
@using System.Globalization;

@foreach (var item in Model)
{

    

    <div id="MyModalDetail_@item.id" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h2 class="modal-title">Détails<span id="eventTitle"></span></h2>
                </div>
                <div class="modal-body">
                    @{ if (@item.Category.CategoryName == "Emploi")
                        {

                            Html.RenderAction("JobDetails_PartialView", "Job", new { model = item });

                        }
                        else if (@item.Category.CategoryName == "Immobilier")
                        {
                            Html.RenderAction("ApartmentDetails_PartialView", "ApartmentRental", new { model = item });
                        }
                        else if (@item.Category.CategoryName == "Multimedia")
                        {
                            Html.RenderAction("MultimediaDetails_PartialView", "Multimedia", new { model = item });
                        }
                        else if (@item.Category.CategoryName == "Vehicule")
                        {
                            Html.RenderAction("VehiculeDetails_PartialView", "Vehicule", new { model = item });
                        }
                        else if (@item.Category.CategoryName == "Mode")
                        {
                            Html.RenderAction("ModeDetails_PartialView", "Mode", new { model = item });
                        }

                    }
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Fermer</button>
                </div>
            </div>
        </div>
    </div>

    <div id="MyModalEdit_@item.id" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h3 class="modal-title">Modifier<span id="eventTitle"></span></h3>
                </div>
                <div class="modal-body">
                    @{ if (@item.Category.CategoryName == "Emploi")
                        {

                            Html.RenderAction("EditJob_PartialView", "Job", new { job = item });

                        }
                        else if (@item.Category.CategoryName == "Immobilier")
                        {
                            Html.RenderAction("EditApartment_PartialView", "ApartmentRental", new { apart = item });
                        }
                        else if (@item.Category.CategoryName == "Multimedia")
                        {
                            Html.RenderAction("EditMultimedia_PartialView", "Multimedia", new { multi = item });
                        }
                        else if (@item.Category.CategoryName == "Vehicule")
                        {
                            //Html.RenderAction("EditMultimedia_PartialView", "Multimedia", new { multi = item });
                            <p> Pas encore disponible pour le moment</p>
                            <p> Supprimer et dépposer une nouvelle annonce s'il vous plait !</p>
                        }
                        else if (@item.Category.CategoryName == "Mode")
                        {
                            //Html.RenderAction("EditMultimedia_PartialView", "Multimedia", new { multi = item });
                            <p> Pas encore disponible pour le moment</p>
                            <p> Supprimer et dépposer une nouvelle annonce s'il vous plait !</p>
                        }
                    }
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Fermer</button>
                </div>
            </div>
        </div>
    </div>
                        }





<div class="panel-primary " id="ProductAdd">


    <div class="panel-heading">
        <h3 class="panel-title">Historique de mes annonces</h3>
    </div>
    <div class="table-responsive">
        <table class="table table-bordered table-condensed">
            <tr>
                <th>
                    Catégorie
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Title)
                </th>
                @*<th>
                        @Html.DisplayNameFor(model => model.Description)
                    </th>*@
                <th>
                    @Html.DisplayNameFor(model => model.Town)
                </th>
                @*<th>
                        @Html.DisplayNameFor(model => model.Street)
                    </th>*@
                <th>
                    @Html.DisplayNameFor(model => model.Price) <span class="text-danger">(FCFA)</span>
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DateAdd)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SearchOrAskJob)
                </th>

                <th>
                    Nombre d'images
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                       @{
                           string catLogo = null;
                           var cat = Html.DisplayFor(modelItem => item.Category.CategoryName).ToString();
                           if(cat == "Emploi")
                           {
                               catLogo = "👷 Emploi";
                           } else if(cat == "Immobilier")
                           {
                               catLogo = "🏠 Immobilier";
                           } else if(cat == "Multimedia")
                           {
                               catLogo = "💻 Multimédia";
                           }
                           else if (cat == "Vehicule")
                           {
                               catLogo = "🚗 Véhicule";
                           }
                           else if (cat == "Mode")
                           {
                               catLogo = "👚 Mode";
                           }
                       } 
                        @catLogo
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    @*<td>
                            @Html.DisplayFor(modelItem => item.Description)
                        </td>*@
                    <td>
                        @Html.DisplayFor(modelItem => item.Town)
                    </td>
                    @*<td>
                            @Html.DisplayFor(modelItem => item.Street)
                        </td>*@
                    <td>
                        @Html.DisplayFor(modelItem => item.Price)
                    </td>
                    <td>
                        @{
                            //var st = DateTime.ParseExact(item.StartHour, "dd/MM/yyyy HH:mm", null);
                            var date = item.DateAdd.ToString("ddd, dd MMM yyy HH':'mm", new CultureInfo("fr-FR"));

                        }
                        @date
                       
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.SearchOrAskJob)
                    </td>
                    <td>
                        @if (item.Images.Count() == 0)
                        {
                            <span>Aucune image</span>
                        }
                        else
                        {
                            <span>@item.Images.Count() Image(s)</span>
                        }
                    </td>
                    <td>
                        <a id="btnModalEdit_@item.id" class="btn btn-success" title="Modifier"><span class="glyphicon glyphicon-edit"></span></a>

                        <a id="btnModalDetails_@item.id" class="btn btn-info" title="Détails"><span class="glyphicon glyphicon-eye-open"></span></a>


                        <a href="javascript:void(0);" data-id="@item.id" id="deletePro_@item.id" class="btn btn-danger deleteProduct_@item.id" title="Supprimer"><span class="glyphicon glyphicon-trash"></span></a>
                    </td>
                </tr>
            }

        </table>
    </div>
</div>

<script type="text/javascript">
    $(function () {

         //for Image product
        $.ajax({
            type: "POST",
            url: '/Product/listProductImageReturnJson',
            success: function (data2) {
                //var result = JSON.stringify(data);
                //console.log(data2);
                $.each(data2, function (i, data) {

                    var btnDeleteImage = $('.deleteItem_' + data)
                   // console.log(btnDeleteImage);
        $(btnDeleteImage).click(function (e) {
           e.preventDefault();
           var $ctrl = $(this);
           if (confirm('Voulez vous vraiment supprimer cette image?')) {
               $.ajax({
                   url: '@Url.Action("DeleteImage","Product")',
                   type: 'POST',
                   data: { id: $(this).data('id') }
               }).done(function (data) {
                   if (data.Result == "OK") {
                       $ctrl.closest('li').remove();
                   }
                   else if (data.Result.Message) {
                       alert(data.Result.Message);
                   }
               }).fail(function () {
                   alert("Une erreur c'est produite !.");
               })

           }
       });

                })
            },
            error: function (xhr) {
                console.log(xhr.responseText);
                alert("Une erreur est survenu  !");
            }
        });





        $.ajax({
            type: "POST",
            url: '/Product/listProductReturnJson',
            success: function (data1) {
                //var result = JSON.stringify(data);
                //console.log(data1);
                $.each(data1, function (i, data) {


                    //for Product
                    var btnDelete = $('.deleteProduct_' + data)
                    $(btnDelete).click(function (e) {
           e.preventDefault();
           var $ctrl = $(this);
                        if (confirm('Voulez vous vraiment supprimer cette annonce?')) {
               $.ajax({
                   url: '@Url.Action("DeleteProduct","Product")',
                   type: 'POST',
                   data: { id: $(this).data('id') }
               }).done(function (data) {
                   if (data.Result == "OK") {
                       $ctrl.closest('tr').remove();
                   }
                   else if (data.Result.Message) {
                       alert(data.Result.Message);
                   }
               }).fail(function () {
                   alert("Une erreur c'est produite !");
               })

           }
       });



                    //var btnDeleteInitiative = $('#btnModalDeleteInitiative_' + data.IdEvent);
                    //var modaDeleteInitiative = $('#MyModalDeleteInitiative_' + data.IdEvent);

                    //$(btnDeleteInitiative).click(function () {

                    //    $(modaDeleteInitiative).modal();

                    //});
                    //for product details
                    var btnDetailProduct = $('#btnModalDetails_' + data);
                    var modaDetailProduct = $('#MyModalDetail_' + data);
                    var btnEditIni = $('#btnEditProductDetail_' + data);
                   // console.log(btnDetailProduct);
                    //console.log(modaDetailProduct);
                    $(btnDetailProduct).click(function () {

                        $(modaDetailProduct).modal();

                    });
                    $(btnEditIni).click(function () {
                        $(modaDetailProduct).modal('hide');
                        // $(modaEditmodaDetailInitiative).modal(); //apres
                        $(modaDetailProduct).on('hidden.bs.modal', function () {
                            // Load up a new modal...
                            $(modaEditmodaProduct).modal('show')
                        })
                    });

                    //for product Edit
                    var btnEditmodaProduct = $('#btnModalEdit_' + data);
                    var modaEditmodaProduct = $('#MyModalEdit_' + data);
                    $(btnEditmodaProduct).click(function () {

                        $(modaEditmodaProduct).modal();
                    });

                    //var countri = $('.Country_' + data.IdEvent);
                    var town = $('.Town_' + data);
                    //var zipcode = $('.ZipCode_' + data.IdEvent);
                    var address = $('.Street_' + data);

                    $(address).autocomplete({
                        source: function (request, response) {
                            $.ajax({
                                type: "POST",
                                url: '@Url.Action("ShowAddress", "Job")',
                                dataType: "json",
                                headers: {
                                    //"api-key": searchServiceApiKey,
                                    "Content-Type": "application/json"
                                },
                                data: JSON.stringify({
                                    top: 5,

                                    // country: countri.val(),
                                    town: town.val(),
                                    // zipcode: zipcode.val(),
                                    term: request.term
                                }),
                                success: function (data) {
                                    if (data && data.length > 0) {
                                        var parsedDate = $.parseJSON(data);

                                        response((parsedDate["results"]).map(feature => feature["formatted"]));

                                    }
                                }
                            });
                        },
                        minLength: 3,
                        position: {
                            //my: "left top",
                            //at: "left-23 bottom+10"
                            my: "left top",
                            at: "left-3 bottom+0",
                            of: address
                        },
                        appendTo: modaEditmodaProduct
                    });
                    var btneditvalid = $('#btnFormEditJob_' + data);
                    // var Support =  $('.suppor_' + data.IdEvent);
                    $(btneditvalid).click(function () {
                        
                        var y = town.val();

                        var u = address.val();

                        var descrip = $('.Description_' + data).val();

                        if (y !== "" && u !== "" && descrip !=="") {
                            //if (descrip.length >= 3 && descrip.length <= 1000) {
                            //    $(modaEditmodaProduct).modal('hide');
                            //    $(".js-alert-Edit-Initiative").removeClass('hidden').delay(5000).queue(function () {
                            //        $(this).addClass('hidden').dequeue();
                            //    })
                            //}
                            //if (descrip == "") {
                                $(modaEditmodaProduct).modal('hide');
                            $(".js-alert-Edit-product").removeClass('hidden').delay(5000).queue(function () {
                                    $(this).addClass('hidden').dequeue();
                                })
                            //}
 
                        }

                    });

                    var btneditapart = $('#btnFormEditApart_' + data);

                    $(btneditapart).click(function () {
                        var x = $('#TitleAppart_' + data)
                        var y = $('#DescriptionAppart_' + data);
                        var z = $('#StreetAppart_' + data);
                        console.log("toto")

                        //if (x !== "" && y !== "" && z !== "" ) {

                        $(modaEditmodaProduct).modal('hide');
                        $(".js-alert-Edit-product").removeClass('hidden').delay(5000).queue(function () {
                            $(this).addClass('hidden').dequeue();
                        });


                        // }

                    });

                    //var btneditapart = $('#btnFormEditApart_' + data);
                    //$(btneditapart).click(function () {
                    //    $(modaEditmodaProduct).modal('hide');
                    //})

                    var btnDeleteIni = $('#deletePro_' + data);

                    $(btnDeleteIni).click(function () {
                        $(modaEditmodaProduct).modal('hide');
                            $(".js-alert-delete-Initiative").removeClass('hidden').delay(5000).queue(function () {
                                $(this).addClass('hidden').dequeue();
                            })
                    });

                    //var FileEditImage = $('#FileEditInitia_' + data.IdEvent);
                    //var FormEditImage = $('.EditImagInitiativ_' + data.IdEvent);

                    //$(FileEditImage).on("change", function () {
                    //    $(FormEditImage).submit();
                    //});


                })
            },
            error: function (xhr) {
                console.log(xhr.responseText);
                alert("Une erreur est survenu  !");
            }
        });
    });
</script>