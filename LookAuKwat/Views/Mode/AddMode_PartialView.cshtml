@model LookAuKwat.ViewModel.ModeViewModel
@using LookAuKwat.ViewModel

@using (Ajax.BeginForm("AddMode", "Mode", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "ProductAdd" }, new { name = "modeform", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group" id="SearchOrAskModeDiv">
        @Html.LabelFor(model => model.SearchOrAskMode, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.SearchOrAskMode, SelectListMethodVehicle.SearchOrAskVehiculeList(), "Choisir", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.SearchOrAskMode, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group hidden" id="RubriqueModeDiv">
        @Html.LabelFor(model => model.RubriqueMode, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.RubriqueMode, SelectListMethodMode.RubriqueModeList(), "choisir", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.RubriqueMode, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group hidden" id="TypeModeClothesDiv">
        @Html.LabelFor(model => model.TypeModeClothes, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.TypeModeClothes, SelectListMethodMode.TypeClothesList(), "choisir", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.TypeModeClothes, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group hidden" id="TypeModeShoesDiv">
        @Html.LabelFor(model => model.TypeModeShoes, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.TypeModeShoes, SelectListMethodMode.TypeShoesList(), "choisir", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.TypeModeShoes, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group hidden" id="TypeModeAccesorieLugagesDiv">
        @Html.LabelFor(model => model.TypeModeAccesorieLugages, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.TypeModeAccesorieLugages, SelectListMethodMode.TypeAccesorieLugagesList(), "choisir", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.TypeModeAccesorieLugages, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group hidden" id="TypeModeWatchJewelryDiv">
        @Html.LabelFor(model => model.TypeModeWatchJewelry, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.TypeModeWatchJewelry, SelectListMethodMode.TypeWatchJewelryList(), "choisir", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.TypeModeWatchJewelry, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group hidden" id="TypeModeBabyEquipmentDiv">
        @Html.LabelFor(model => model.TypeModeBabyEquipment, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.TypeModeBabyEquipment, SelectListMethodMode.TypeBabyEquipmentList(), "choisir", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.TypeModeBabyEquipment, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group hidden" id="TypeModeBabyClothesDiv">
        @Html.LabelFor(model => model.TypeModeBabyClothes, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.TypeModeBabyClothes, SelectListMethodMode.TypeBabyClothesList(), "choisir", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.TypeModeBabyClothes, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group hidden" id="TypeModeBabyClothesDiv">
        @Html.LabelFor(model => model.TypeModeBabyClothes, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.TypeModeBabyClothes, SelectListMethodMode.TypeBabyClothesList(), "choisir", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.TypeModeBabyClothes, "", new { @class = "text-danger" })
        </div>
    </div>*@
    <div class="form-group hidden" id="BrandModeClothesDiv">
        @Html.LabelFor(model => model.BrandModeClothes, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.BrandModeClothes, SelectListMethodMode.BrandClothesList(), "choisir", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.BrandModeClothes, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group hidden" id="BrandModeShoesDiv">
        @Html.LabelFor(model => model.BrandModeShoes, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.BrandModeShoes, SelectListMethodMode.BrandShoesList(), "choisir", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.BrandModeShoes, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group hidden" id="UniversModeDiv">
        @Html.LabelFor(model => model.UniversMode, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.UniversMode, SelectListMethodMode.UniversList(), "choisir", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.UniversMode, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group hidden" id="SizeModeClothesDiv">
        @Html.LabelFor(model => model.SizeModeClothes, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.SizeModeClothes, SelectListMethodMode.SeizeClothesList(), "choisir", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.SizeModeClothes, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group hidden" id="SizeModeShoesDiv">
        @Html.LabelFor(model => model.SizeModeShoes, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.SizeModeShoes, SelectListMethodMode.SizeShoesList(), "choisir", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.SizeModeShoes, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group hidden" id="ColorModeDiv">
        @Html.LabelFor(model => model.ColorMode, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.ColorMode, SelectListMethodMode.ColorModeList(), "choisir", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ColorMode, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group hidden" id="StateModeDiv">
        @Html.LabelFor(model => model.StateMode, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.StateMode, SelectListMethodMode.StateModeList(), "choisir", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.StateMode, "", new { @class = "text-danger" })
        </div>
    </div>
    
    <div class="form-group hidden" id="TitleModeDiv">
        @Html.LabelFor(model => model.TitleMode, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.EditorFor(model => model.TitleMode, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TitleMode, "", new { @class = "text-danger" })
        </div>
        <p class="col-md-2" id="spanMultimediaTitle" style="color:lightgreen">Suivant <span class="glyphicon glyphicon-plus"></span></p>
    </div>


    <div class="form-group hidden" id="DescriptionModeDiv">
        @Html.LabelFor(model => model.DescriptionMode, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-8">
            @Html.TextAreaFor(model => model.DescriptionMode, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DescriptionMode, "", new { @class = "text-danger" })
        </div>
        <p class="col-md-2" id="spanMultimediaDescription" style="color:lightgreen">Suivant <span class="glyphicon glyphicon-plus"></span></p>
    </div>

    <div class="form-group hidden" id="TownModeDiv">
        @Html.LabelFor(model => model.TownMode, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.TownMode, SelectListMethod.GetListTownCameroon(), "choisir", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.TownMode, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="hidden" id="StreetModeDiv">
        <p class=" col-md-offset-2 text-info">Veuillez choisir une adresse de la liste après votre saisie.</p>
        <div class="form-group">

            @Html.LabelFor(model => model.StreetMode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.StreetMode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StreetMode, "", new { @class = "text-danger" })
            </div>

        </div>
    </div>

    <div class="form-group hidden" id="PriceModediv">
        @Html.LabelFor(model => model.PriceMode, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PriceMode, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PriceMode, "", new { @class = "text-danger" })
        </div>

    </div>

    <div class="form-group hidden" id="ImageModeDiv">
        @Html.LabelFor(model => model.Imageproduct.Image, htmlAttributes: new { @class = "control-label col-md-2" })

        @*<label class="control-label col-md-2" for="#imagesJobs"></label>*@
        <div class="col-md-6">

            <input type="file" name="ImageFile" accept="image/*" multiple="multiple" @*onchange="readURL(this);"*@>
            <p class="text-info">Vous pouvez sélectionner à la fois une ou plusieurs images.</p>
        </div>
        @*<div style="height:50px " class="col-md-4">
                <img id="InitiativeImageUpToDate" src="https://cdn.pixabay.com/photo/2016/08/08/09/17/avatar-1577909_960_720.png" alt="photo de initiative" height="50" />
            </div>*@
    </div>

    <div class="form-group hidden" id="btnModeDiv">
        <div class="col-md-offset-2 col-md-10">
           <input id="btnAddMode" type="submit" value="Ajouter" class="btn btn-success" />
        </div>
    </div>
</div>
}

<script type="text/javascript">

    $("#SearchOrAskModeDiv").change(function () {

        if ($('#SearchOrAskMode').val() !== 'choisir') {


            $("#RubriqueModeDiv").removeClass('hidden');

        }
    });

    $("#RubriqueModeDiv").change(function () {

        if ($('#RubriqueMode').val() !== 'choisir' && $('#RubriqueMode').val() == 'Vêtements') {


            $("#TypeModeClothesDiv").removeClass('hidden');
            $("#BrandModeClothesDiv").removeClass('hidden');
            $("#UniversModeDiv").removeClass('hidden');
            $("#SizeModeClothesDiv").removeClass('hidden');
            $("#ColorModeDiv").removeClass('hidden');
            $("#StateModeDiv").removeClass('hidden');

            //hidden those div
            $("#TypeModeShoesDiv").addClass('hidden');
            $("#BrandModeShoesDiv").addClass('hidden');
            $("#SizeModeShoesDiv").addClass('hidden');
            $("#TypeModeAccesorieLugagesDiv").addClass('hidden');
            $("#TypeModeWatchJewelryDiv").addClass('hidden');
            $("#TypeModeBabyEquipmentDiv").addClass('hidden');
            $("#TypeModeBabyClothesDiv").addClass('hidden');

            //reset the select
            document.getElementById("TypeModeShoes").selectedIndex = "0";
            document.getElementById("BrandModeShoes").selectedIndex = "0";
            document.getElementById("SizeModeShoes").selectedIndex = "0";
            document.getElementById("TypeModeAccesorieLugages").selectedIndex = "0";
            document.getElementById("TypeModeWatchJewelry").selectedIndex = "0";
            document.getElementById("TypeModeBabyEquipment").selectedIndex = "0";
            document.getElementById("TypeModeBabyClothes").selectedIndex = "0";



            $("#StateModeDiv").change(function () {

                if ($('#StateMode').val() !== 'choisir') {


                    $("#TitleModeDiv").removeClass('hidden');

                }
            });
        }
        else if ($('#RubriqueMode').val() !== 'choisir' && $('#RubriqueMode').val() == 'Chaussures') {

            $("#TypeModeShoesDiv").removeClass('hidden');
            $("#BrandModeShoesDiv").removeClass('hidden');
            $("#UniversModeDiv").removeClass('hidden');
            $("#SizeModeShoesDiv").removeClass('hidden');
            $("#ColorModeDiv").removeClass('hidden');
            $("#StateModeDiv").removeClass('hidden');

            //hidden those div
            $("#TypeModeClothesDiv").addClass('hidden');
            $("#BrandModeClothesDiv").addClass('hidden');
            $("#SizeModeClothesDiv").addClass('hidden');
            $("#TypeModeAccesorieLugagesDiv").addClass('hidden');
            $("#TypeModeWatchJewelryDiv").addClass('hidden');
            $("#TypeModeBabyEquipmentDiv").addClass('hidden');
            $("#TypeModeBabyClothesDiv").addClass('hidden');

            //reset the select
            document.getElementById("TypeModeClothes").selectedIndex = "0";
            document.getElementById("BrandModeClothes").selectedIndex = "0";
            document.getElementById("SizeModeClothesDiv").selectedIndex = "0";
            document.getElementById("TypeModeAccesorieLugages").selectedIndex = "0";
            document.getElementById("TypeModeWatchJewelry").selectedIndex = "0";
            document.getElementById("TypeModeBabyEquipment").selectedIndex = "0";
            document.getElementById("TypeModeBabyClothes").selectedIndex = "0";


            $("#StateModeDiv").change(function () {

                if ($('#StateMode').val() !== 'choisir') {


                    $("#TitleModeDiv").removeClass('hidden');

                }
            });
        }
        else if ($('#RubriqueMode').val() !== 'choisir' && $('#RubriqueMode').val() == 'Accesoires & Bagagerie') {

            $("#TypeModeAccesorieLugagesDiv").removeClass('hidden');
            $("#BrandModeClothesDiv").removeClass('hidden');
            $("#UniversModeDiv").removeClass('hidden');
            $("#ColorModeDiv").removeClass('hidden');
            $("#StateModeDiv").removeClass('hidden');

            //hidden those div
            $("#TypeModeShoesDiv").addClass('hidden');
            $("#BrandModeShoesDiv").addClass('hidden');
            $("#SizeModeShoesDiv").addClass('hidden');
            $("#TypeModeClothesDiv").addClass('hidden');
            $("#TypeModeWatchJewelryDiv").addClass('hidden');
            $("#TypeModeBabyEquipmentDiv").addClass('hidden');
            $("#TypeModeBabyClothesDiv").addClass('hidden');

            //reset the select
            document.getElementById("TypeModeShoes").selectedIndex = "0";
            document.getElementById("BrandModeShoes").selectedIndex = "0";
            document.getElementById("SizeModeShoes").selectedIndex = "0";
            document.getElementById("TypeModeClothes").selectedIndex = "0";
            document.getElementById("TypeModeWatchJewelry").selectedIndex = "0";
            document.getElementById("TypeModeBabyEquipment").selectedIndex = "0";
            document.getElementById("TypeModeBabyClothes").selectedIndex = "0";

            $("#StateModeDiv").change(function () {

                if ($('#StateMode').val() !== 'choisir') {


                    $("#TitleModeDiv").removeClass('hidden');

                }
            });
        }
        else if ($('#RubriqueMode').val() !== 'choisir' && $('#RubriqueMode').val() == 'Montres & Bijoux') {

            $("#TypeModeWatchJewelryDiv").removeClass('hidden');
            $("#BrandModeClothesDiv").removeClass('hidden');
            $("#UniversModeDiv").removeClass('hidden');
            $("#ColorModeDiv").removeClass('hidden');
            $("#StateModeDiv").removeClass('hidden');

            //hidden those div
            $("#TypeModeShoesDiv").addClass('hidden');
            $("#BrandModeShoesDiv").addClass('hidden');
            $("#SizeModeShoesDiv").addClass('hidden');
            $("#SizeModeClothesDiv").addClass('hidden');
            $("#TypeModeAccesorieLugagesDiv").addClass('hidden');
            $("#TypeModeClothesDiv").addClass('hidden');
            $("#TypeModeBabyEquipmentDiv").addClass('hidden');
            $("#TypeModeBabyClothesDiv").addClass('hidden');

            //reset the select
            document.getElementById("TypeModeShoes").selectedIndex = "0";
            document.getElementById("BrandModeShoes").selectedIndex = "0";
            document.getElementById("SizeModeShoes").selectedIndex = "0";
            document.getElementById("TypeModeAccesorieLugages").selectedIndex = "0";
            document.getElementById("TypeModeClothes").selectedIndex = "0";
            document.getElementById("TypeModeBabyEquipment").selectedIndex = "0";
            document.getElementById("TypeModeBabyClothes").selectedIndex = "0";

            $("#StateModeDiv").change(function () {

                if ($('#StateMode').val() !== 'choisir') {


                    $("#TitleModeDiv").removeClass('hidden');

                }
            });
        } else if ($('#RubriqueMode').val() !== 'choisir' && $('#RubriqueMode').val() == 'Equipement bébé') {

            $("#TypeModeBabyEquipmentDiv").removeClass('hidden');
            $("#BrandModeClothesDiv").removeClass('hidden');
            $("#ColorModeDiv").removeClass('hidden');
            $("#StateModeDiv").removeClass('hidden');

            //hidden those div
            $("#TypeModeShoesDiv").addClass('hidden');
            $("#BrandModeShoesDiv").addClass('hidden');
            $("#SizeModeShoesDiv").addClass('hidden');
            $("#SizeModeClothesDiv").addClass('hidden');
            $("#TypeModeAccesorieLugagesDiv").addClass('hidden');
            $("#TypeModeClothesDiv").addClass('hidden');
            $("#TypeModeWatchJewelryDiv").addClass('hidden');
            $("#TypeModeBabyClothesDiv").addClass('hidden');

            //reset the select
            document.getElementById("TypeModeShoes").selectedIndex = "0";
            document.getElementById("BrandModeShoes").selectedIndex = "0";
            document.getElementById("SizeModeShoes").selectedIndex = "0";
            document.getElementById("SizeModeClothes").selectedIndex = "0";
            document.getElementById("TypeModeAccesorieLugages").selectedIndex = "0";
            document.getElementById("TypeModeClothes").selectedIndex = "0";
            document.getElementById("TypeModeWatchJewelry").selectedIndex = "0";
            document.getElementById("TypeModeBabyClothes").selectedIndex = "0";

            $("#StateModeDiv").change(function () {

                if ($('#StateMode').val() !== 'choisir') {


                    $("#TitleModeDiv").removeClass('hidden');

                }
            });
        }
        else if ($('#RubriqueMode').val() !== 'choisir' && $('#RubriqueMode').val() == 'Vêtements bébé') {

            $("#TypeModeBabyClothesDiv").removeClass('hidden');
            $("#BrandModeClothesDiv").removeClass('hidden');
            $("#SizeModeClothesDiv").removeClass('hidden');
            $("#ColorModeDiv").removeClass('hidden');
            $("#StateModeDiv").removeClass('hidden');

            //hidden those div
            $("#TypeModeShoesDiv").addClass('hidden');
            $("#BrandModeShoesDiv").addClass('hidden');
            $("#SizeModeShoesDiv").addClass('hidden');
            $("#TypeModeAccesorieLugagesDiv").addClass('hidden');
            $("#TypeModeClothesDiv").addClass('hidden');
            $("#TypeModeWatchJewelryDiv").addClass('hidden');
            $("#TypeModeBabyEquipmentDiv").addClass('hidden');

            //reset the select
            document.getElementById("TypeModeShoes").selectedIndex = "0";
            document.getElementById("BrandModeShoes").selectedIndex = "0";
            document.getElementById("SizeModeShoes").selectedIndex = "0";
            document.getElementById("TypeModeAccesorieLugages").selectedIndex = "0";
            document.getElementById("TypeModeClothes").selectedIndex = "0";
            document.getElementById("TypeModeWatchJewelry").selectedIndex = "0";
            document.getElementById("TypeModeBabyEquipment").selectedIndex = "0";

            $("#StateModeDiv").change(function () {

                if ($('#StateMode').val() !== 'choisir') {


                    $("#TitleModeDiv").removeClass('hidden');

                }
            });
        }

        $("#TitleModeDiv").change(function () {

            if ($('#TitleMode').val() !== 'choisir') {


                $("#DescriptionModeDiv").removeClass('hidden');

            }
        });

        $("#DescriptionModeDiv").change(function () {

            if ($('#DescriptionMode').val() !== 'choisir') {


                $("#TownModeDiv").removeClass('hidden');

            }
        });

        $("#TownModeDiv").change(function () {

            if ($('#TownMode').val() !== 'choisir' && $('#SearchOrAskMode').val() == 'Je vends') {


                $("#StreetModeDiv").removeClass('hidden');
                $("#PriceModediv").removeClass('hidden');
                $("#ImageModeDiv").removeClass('hidden');
                $("#btnModeDiv").removeClass('hidden');

            } else if ($('#TownMode').val() !== 'choisir' && $('#SearchOrAskMode').val() == 'Je recherche') {

                $("#StreetModeDiv").removeClass('hidden');
                $("#ImageModeDiv").removeClass('hidden');
                $("#btnModeDiv").removeClass('hidden');
            }
        });



        $('#btnAddMode').click(function () {
           
            var y = document.forms["modeform"]["TitleMode"].value;
            var z = document.forms["modeform"]["DescriptionMode"].value;
            var u = document.forms["modeform"]["StreetMode"].value;
            var w = document.forms["modeform"]["PriceMode"].value;


            if (y !== "" && z !== "" && u !== "" && w !== "" ) {

                $('#MyModalAddMode').modal('hide');
                $(".js-alert").removeClass('hidden').delay(5000).queue(function () {
                    $(this).addClass('hidden').dequeue();
                });


            }

        });



        $("#StreetMode").autocomplete({
        source: function (request, response) {
        $.ajax({
            type: "POST",
            url: '@Url.Action("ShowAddress", "Job")',
            dataType: "json",
            headers: {
                //"api-key": searchServiceApiKey,
                "Content-Type": "application/json"
            },
            data: JSON.stringify({
                top: 5,

               // country: $("#Country").val(),
                town: $("#TownMode").val(),
                 // zipcode: $("#ZipCode").val(),
                term: request.term
            }),
            success: function (data) {
                if (data && data.length > 0) {
                      var parsedDate = $.parseJSON(data);

                        response((parsedDate["results"]).map(feature => feature["formatted"]));

                    }
                }
            });
            },
            select: function (event, ui) {
                //remember the selected item
                $('#StreetMode')
                    .data('selected-item', ui.item.label);
            },
        minLength: 3,
        position: {
            //my: "left top",
            //at: "left-23 bottom+10"
            my: "left top",
  at: "left-3 bottom+0",
            of: "#StreetMode"
            },
            appendTo: "#MyModalAddMode"
        }).blur(function () {
            var value = $('#StreetMode').val();
            //check if the input's value matches the selected item
            if (value != $('#StreetMode').data('selected-item')) {
                //they don't, the user must have typed something else
                $('#StreetMode')
                    .val('') //clear the input's text
                    .data('selected-item', ''); //clear the selected item
            }
        });

    });
</script>