@model LookAuKwat.ViewModel.SeachJobViewModel
@using LookAuKwat.ViewModel

@using (Html.BeginForm("SearchAllProoduct", "Product"))
{
    @Html.AntiForgeryToken()

    <div>
        <h4 class="text-center">Filtre de la <strong>rercherche</strong> dans toutes les catégories</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="row">

        <div class="form-group col-xs-6 col-sm-4 col-md-4">

            @Html.DropDownListFor(model => model.Country, SelectListMethod.GetCountryList(), "Tous les Pays", new { @id = "Country", @class = "form-control Country" })
            @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })

        </div>

        <div class="form-group col-xs-6 col-sm-4 col-md-4">

            @Html.DropDownListFor(model => model.TownAllProduct, SelectListMethod.GetListTownCameroon(), "Toutes les villes", new { @id = "Town", @class = "form-control TownSearchJob" })
            @Html.ValidationMessageFor(model => model.TownAllProduct, "", new { @class = "text-danger" })

        </div>

        <div class="form-group col-xs-6 col-sm-4 col-md-4">

            @Html.EditorFor(model => model.SearchTermAllProduct, new { htmlAttributes = new { @class = "form-control", placeholder = "Que recherchez vous ?" } })
            @Html.ValidationMessageFor(model => model.SearchTermAllProduct, "", new { @class = "text-danger" })

        </div>


    </div>

        <button id="submitAllProduct" type="submit" class="btn btn-primary">
            <span class="glyphicon glyphicon-search"></span> <strong>Rechercher (<span class="badge"></span> Résultats)</strong>
        </button>
    </div>
}

<script type="text/javascript">
    $(function () {
      
        FindContryTownn();
       
        ResultAllSpan();
        $("#Town").change(ResultAllSpan);
        $("#Country").change(ResultAllSpan);

        $('#SearchTermAllProduct').on('input', function () {
            ResultAllSpan();
        });
       
    })


    $(".Country").change(function () {
       
        FindContryTownn();
    });  

    function FindContryTownn() {

        var country = $(".Country").val();
        if (country == null || country == "") {
            //alert("Veillez choisir un pays s'il vous plaît");
            return;
        }
        // $("input[id='ClientName']").val(country);
        if (country != null || country != "") {
            
            $.ajax({
                url: "/Product/BindTown",
                type: "POST",
                data: JSON.stringify({ 'country': country }),
                dataType: "json",
                traditional: true,
                contentType: "application/json; charset=utf-8",
                success: function (result) {

                    //debugger;  
                    var tout = "Toutes les villes"
                    var listItems = "<option value='" + tout + "'>" + tout

                        + "</option>";
                    // var list = "";
                    var a = result;
                    //var s = result.bindingAddresses.siteAdd;
                    for (i in result) {

                        listItems += "<option value='" + a[i].Value + "'>" + a[i].Text

                            + "</option>";
                    }
                    $("#Town").html(listItems);
                    var OldValueTown = localStorage.getItem('OldValueTown');
                    if (OldValueTown != '') {
                       
                        $("#Town").val(OldValueTown);
                        ResultAllSpan();
                    }
                    
                    //for (j in s) {
                    //    list += "<option value='" + s[j].Value + "'>" + s[j].Text +

                    //        "</option>";
                    //}
                    //$("#SiteId").html(list);
                },
                error: function () {
                    alert("An error has occured!!!");
                }
            });
        }

    }


    function ResultAllSpan() {
        var townValue = $("#Town").val();
        
        if (townValue != '' && townValue != null) {
           
            localStorage.setItem('OldValueTown', townValue);
        }
       
        $.ajax({
            type: "POST",
            url: '/Product/listAllProductSpanReturnJson',
            dataType: "json",
            headers: {
                //"api-key": searchServiceApiKey,
                "Content-Type": "application/json"
            },
            data: JSON.stringify({

                town: $("#Town").val(),
                country: $("#Country").val(),
                term: $("#SearchTermAllProduct").val(),


            }),
            success: function (data2) {

                var $badge = $("#submitAllProduct").find('.badge')
                   // number = Object.keys(data2).length;
                $badge.text(data2);
           
            },
            error: function (xhr) {
                console.log(xhr.responseText);
                alert("Une erreur est survenu  !");
            }
        })
    }
</script>